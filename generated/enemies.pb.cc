// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: enemies.proto
// Protobuf C++ Version: 5.29.2

#include "enemies.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr EnemyValue::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : team_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        x_{0},
        y_{0},
        z_{0},
        hp_{0},
        yaw_{0},
        has_defuse_{false},
        is_defusing_{false},
        pitch_{0},
        time_left_defuse_{0},
        time_left_explosion_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR EnemyValue::EnemyValue(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EnemyValueDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnemyValueDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnemyValueDefaultTypeInternal() {}
  union {
    EnemyValue _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnemyValueDefaultTypeInternal _EnemyValue_default_instance_;

inline constexpr Enemies::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : entries_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Enemies::Enemies(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EnemiesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EnemiesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EnemiesDefaultTypeInternal() {}
  union {
    Enemies _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EnemiesDefaultTypeInternal _Enemies_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_enemies_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_enemies_2eproto = nullptr;
const ::uint32_t
    TableStruct_enemies_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::EnemyValue, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::EnemyValue, _impl_.team_),
        PROTOBUF_FIELD_OFFSET(::EnemyValue, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::EnemyValue, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::EnemyValue, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::EnemyValue, _impl_.z_),
        PROTOBUF_FIELD_OFFSET(::EnemyValue, _impl_.hp_),
        PROTOBUF_FIELD_OFFSET(::EnemyValue, _impl_.yaw_),
        PROTOBUF_FIELD_OFFSET(::EnemyValue, _impl_.pitch_),
        PROTOBUF_FIELD_OFFSET(::EnemyValue, _impl_.has_defuse_),
        PROTOBUF_FIELD_OFFSET(::EnemyValue, _impl_.is_defusing_),
        PROTOBUF_FIELD_OFFSET(::EnemyValue, _impl_.time_left_defuse_),
        PROTOBUF_FIELD_OFFSET(::EnemyValue, _impl_.time_left_explosion_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Enemies, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Enemies, _impl_.entries_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::EnemyValue)},
        {20, -1, -1, sizeof(::Enemies)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_EnemyValue_default_instance_._instance,
    &::_Enemies_default_instance_._instance,
};
const char descriptor_table_protodef_enemies_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\renemies.proto\"\321\001\n\nEnemyValue\022\014\n\004team\030\001"
    " \001(\t\022\014\n\004name\030\002 \001(\t\022\t\n\001x\030\003 \001(\002\022\t\n\001y\030\004 \001(\002"
    "\022\t\n\001z\030\005 \001(\002\022\n\n\002hp\030\006 \001(\005\022\013\n\003yaw\030\010 \001(\002\022\r\n\005"
    "pitch\030\t \001(\002\022\022\n\nhas_defuse\030\007 \001(\010\022\023\n\013is_de"
    "fusing\030\n \001(\010\022\030\n\020time_left_defuse\030\013 \001(\002\022\033"
    "\n\023time_left_explosion\030\014 \001(\002\"\'\n\007Enemies\022\034"
    "\n\007entries\030\001 \003(\0132\013.EnemyValueb\006proto3"
};
static ::absl::once_flag descriptor_table_enemies_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_enemies_2eproto = {
    false,
    false,
    276,
    descriptor_table_protodef_enemies_2eproto,
    "enemies.proto",
    &descriptor_table_enemies_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_enemies_2eproto::offsets,
    file_level_enum_descriptors_enemies_2eproto,
    file_level_service_descriptors_enemies_2eproto,
};
// ===================================================================

class EnemyValue::_Internal {
 public:
};

EnemyValue::EnemyValue(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:EnemyValue)
}
inline PROTOBUF_NDEBUG_INLINE EnemyValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::EnemyValue& from_msg)
      : team_(arena, from.team_),
        name_(arena, from.name_),
        _cached_size_{0} {}

EnemyValue::EnemyValue(
    ::google::protobuf::Arena* arena,
    const EnemyValue& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EnemyValue* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, x_),
           offsetof(Impl_, time_left_explosion_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::time_left_explosion_));

  // @@protoc_insertion_point(copy_constructor:EnemyValue)
}
inline PROTOBUF_NDEBUG_INLINE EnemyValue::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : team_(arena),
        name_(arena),
        _cached_size_{0} {}

inline void EnemyValue::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, time_left_explosion_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::time_left_explosion_));
}
EnemyValue::~EnemyValue() {
  // @@protoc_insertion_point(destructor:EnemyValue)
  SharedDtor(*this);
}
inline void EnemyValue::SharedDtor(MessageLite& self) {
  EnemyValue& this_ = static_cast<EnemyValue&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.team_.Destroy();
  this_._impl_.name_.Destroy();
  this_._impl_.~Impl_();
}

inline void* EnemyValue::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) EnemyValue(arena);
}
constexpr auto EnemyValue::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EnemyValue),
                                            alignof(EnemyValue));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull EnemyValue::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_EnemyValue_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &EnemyValue::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<EnemyValue>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &EnemyValue::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<EnemyValue>(), &EnemyValue::ByteSizeLong,
            &EnemyValue::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_._cached_size_),
        false,
    },
    &EnemyValue::kDescriptorMethods,
    &descriptor_table_enemies_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* EnemyValue::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 12, 0, 35, 2> EnemyValue::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294963200,  // skipmap
    offsetof(decltype(_table_), field_entries),
    12,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::EnemyValue>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string team = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.team_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.name_)}},
    // float x = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.x_)}},
    // float y = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.y_)}},
    // float z = 5;
    {::_pbi::TcParser::FastF32S1,
     {45, 63, 0, PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.z_)}},
    // int32 hp = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(EnemyValue, _impl_.hp_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.hp_)}},
    // bool has_defuse = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(EnemyValue, _impl_.has_defuse_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.has_defuse_)}},
    // float yaw = 8;
    {::_pbi::TcParser::FastF32S1,
     {69, 63, 0, PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.yaw_)}},
    // float pitch = 9;
    {::_pbi::TcParser::FastF32S1,
     {77, 63, 0, PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.pitch_)}},
    // bool is_defusing = 10;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(EnemyValue, _impl_.is_defusing_), 63>(),
     {80, 63, 0, PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.is_defusing_)}},
    // float time_left_defuse = 11;
    {::_pbi::TcParser::FastF32S1,
     {93, 63, 0, PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.time_left_defuse_)}},
    // float time_left_explosion = 12;
    {::_pbi::TcParser::FastF32S1,
     {101, 63, 0, PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.time_left_explosion_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string team = 1;
    {PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.team_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float x = 3;
    {PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 4;
    {PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float z = 5;
    {PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.z_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // int32 hp = 6;
    {PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.hp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool has_defuse = 7;
    {PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.has_defuse_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // float yaw = 8;
    {PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.yaw_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float pitch = 9;
    {PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.pitch_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // bool is_defusing = 10;
    {PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.is_defusing_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // float time_left_defuse = 11;
    {PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.time_left_defuse_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float time_left_explosion = 12;
    {PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.time_left_explosion_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\12\4\4\0\0\0\0\0\0\0\0\0\0\0\0\0"
    "EnemyValue"
    "team"
    "name"
  }},
};

PROTOBUF_NOINLINE void EnemyValue::Clear() {
// @@protoc_insertion_point(message_clear_start:EnemyValue)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.team_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.time_left_explosion_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.time_left_explosion_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* EnemyValue::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const EnemyValue& this_ = static_cast<const EnemyValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* EnemyValue::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const EnemyValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:EnemyValue)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string team = 1;
          if (!this_._internal_team().empty()) {
            const std::string& _s = this_._internal_team();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "EnemyValue.team");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string name = 2;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "EnemyValue.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // float x = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_x(), target);
          }

          // float y = 4;
          if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_y(), target);
          }

          // float z = 5;
          if (::absl::bit_cast<::uint32_t>(this_._internal_z()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                5, this_._internal_z(), target);
          }

          // int32 hp = 6;
          if (this_._internal_hp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_hp(), target);
          }

          // bool has_defuse = 7;
          if (this_._internal_has_defuse() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_has_defuse(), target);
          }

          // float yaw = 8;
          if (::absl::bit_cast<::uint32_t>(this_._internal_yaw()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                8, this_._internal_yaw(), target);
          }

          // float pitch = 9;
          if (::absl::bit_cast<::uint32_t>(this_._internal_pitch()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                9, this_._internal_pitch(), target);
          }

          // bool is_defusing = 10;
          if (this_._internal_is_defusing() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                10, this_._internal_is_defusing(), target);
          }

          // float time_left_defuse = 11;
          if (::absl::bit_cast<::uint32_t>(this_._internal_time_left_defuse()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                11, this_._internal_time_left_defuse(), target);
          }

          // float time_left_explosion = 12;
          if (::absl::bit_cast<::uint32_t>(this_._internal_time_left_explosion()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                12, this_._internal_time_left_explosion(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:EnemyValue)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t EnemyValue::ByteSizeLong(const MessageLite& base) {
          const EnemyValue& this_ = static_cast<const EnemyValue&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t EnemyValue::ByteSizeLong() const {
          const EnemyValue& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:EnemyValue)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string team = 1;
            if (!this_._internal_team().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_team());
            }
            // string name = 2;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // float x = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
              total_size += 5;
            }
            // float y = 4;
            if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
              total_size += 5;
            }
            // float z = 5;
            if (::absl::bit_cast<::uint32_t>(this_._internal_z()) != 0) {
              total_size += 5;
            }
            // int32 hp = 6;
            if (this_._internal_hp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_hp());
            }
            // float yaw = 8;
            if (::absl::bit_cast<::uint32_t>(this_._internal_yaw()) != 0) {
              total_size += 5;
            }
            // bool has_defuse = 7;
            if (this_._internal_has_defuse() != 0) {
              total_size += 2;
            }
            // bool is_defusing = 10;
            if (this_._internal_is_defusing() != 0) {
              total_size += 2;
            }
            // float pitch = 9;
            if (::absl::bit_cast<::uint32_t>(this_._internal_pitch()) != 0) {
              total_size += 5;
            }
            // float time_left_defuse = 11;
            if (::absl::bit_cast<::uint32_t>(this_._internal_time_left_defuse()) != 0) {
              total_size += 5;
            }
            // float time_left_explosion = 12;
            if (::absl::bit_cast<::uint32_t>(this_._internal_time_left_explosion()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void EnemyValue::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EnemyValue*>(&to_msg);
  auto& from = static_cast<const EnemyValue&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:EnemyValue)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_team().empty()) {
    _this->_internal_set_team(from._internal_team());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_x()) != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_y()) != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_z()) != 0) {
    _this->_impl_.z_ = from._impl_.z_;
  }
  if (from._internal_hp() != 0) {
    _this->_impl_.hp_ = from._impl_.hp_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_yaw()) != 0) {
    _this->_impl_.yaw_ = from._impl_.yaw_;
  }
  if (from._internal_has_defuse() != 0) {
    _this->_impl_.has_defuse_ = from._impl_.has_defuse_;
  }
  if (from._internal_is_defusing() != 0) {
    _this->_impl_.is_defusing_ = from._impl_.is_defusing_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_pitch()) != 0) {
    _this->_impl_.pitch_ = from._impl_.pitch_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_time_left_defuse()) != 0) {
    _this->_impl_.time_left_defuse_ = from._impl_.time_left_defuse_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_time_left_explosion()) != 0) {
    _this->_impl_.time_left_explosion_ = from._impl_.time_left_explosion_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EnemyValue::CopyFrom(const EnemyValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EnemyValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EnemyValue::InternalSwap(EnemyValue* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.team_, &other->_impl_.team_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.time_left_explosion_)
      + sizeof(EnemyValue::_impl_.time_left_explosion_)
      - PROTOBUF_FIELD_OFFSET(EnemyValue, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata EnemyValue::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Enemies::_Internal {
 public:
};

Enemies::Enemies(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Enemies)
}
inline PROTOBUF_NDEBUG_INLINE Enemies::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Enemies& from_msg)
      : entries_{visibility, arena, from.entries_},
        _cached_size_{0} {}

Enemies::Enemies(
    ::google::protobuf::Arena* arena,
    const Enemies& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Enemies* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:Enemies)
}
inline PROTOBUF_NDEBUG_INLINE Enemies::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : entries_{visibility, arena},
        _cached_size_{0} {}

inline void Enemies::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Enemies::~Enemies() {
  // @@protoc_insertion_point(destructor:Enemies)
  SharedDtor(*this);
}
inline void Enemies::SharedDtor(MessageLite& self) {
  Enemies& this_ = static_cast<Enemies&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* Enemies::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) Enemies(arena);
}
constexpr auto Enemies::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(Enemies, _impl_.entries_) +
          decltype(Enemies::_impl_.entries_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(Enemies), alignof(Enemies), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&Enemies::PlacementNew_,
                                 sizeof(Enemies),
                                 alignof(Enemies));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull Enemies::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_Enemies_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &Enemies::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<Enemies>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &Enemies::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<Enemies>(), &Enemies::ByteSizeLong,
            &Enemies::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(Enemies, _impl_._cached_size_),
        false,
    },
    &Enemies::kDescriptorMethods,
    &descriptor_table_enemies_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* Enemies::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> Enemies::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Enemies>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .EnemyValue entries = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Enemies, _impl_.entries_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .EnemyValue entries = 1;
    {PROTOBUF_FIELD_OFFSET(Enemies, _impl_.entries_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::EnemyValue>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void Enemies::Clear() {
// @@protoc_insertion_point(message_clear_start:Enemies)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entries_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Enemies::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Enemies& this_ = static_cast<const Enemies&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Enemies::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Enemies& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Enemies)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .EnemyValue entries = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_entries_size());
               i < n; i++) {
            const auto& repfield = this_._internal_entries().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Enemies)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Enemies::ByteSizeLong(const MessageLite& base) {
          const Enemies& this_ = static_cast<const Enemies&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Enemies::ByteSizeLong() const {
          const Enemies& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Enemies)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .EnemyValue entries = 1;
            {
              total_size += 1UL * this_._internal_entries_size();
              for (const auto& msg : this_._internal_entries()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Enemies::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Enemies*>(&to_msg);
  auto& from = static_cast<const Enemies&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Enemies)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_entries()->MergeFrom(
      from._internal_entries());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Enemies::CopyFrom(const Enemies& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Enemies)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Enemies::InternalSwap(Enemies* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.entries_.InternalSwap(&other->_impl_.entries_);
}

::google::protobuf::Metadata Enemies::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_enemies_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
